{"version":3,"sources":["logo.svg","components/Tickets/title.svg","components/Tickets/plane.svg","components/Filters/Filters.js","components/Tickets/Tickets.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Filters","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","className","props","curMenu","map","curItem","activeCurrency","onClick","changeCur","stops","stopItem","type","id","eventClick","htmlFor","stop","Component","Tickets","call","currency","calcCur","price","transformSum","toFixed","state","tickets","newList","filterTickets","bind","assertThisInitialized","_this2","updateList","active","list","filter","item","push","_this3","fetch","then","response","json","data","setState","catch","error","console","log","trPrice","toString","length","i","ar","split","splice","join","_this4","ticket","departure_time","arrival_date","departure_date","origin","origin_name","arrival_time","destination","destination_name","src","title","alt","plane","App","e","target","innerText","changeStops","checked","logo","Filters_Filters_Filters","stateStops","Tickets_Tickets_Tickets","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96491a6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c82fe072.svg\";","module.exports = __webpack_public_path__ + \"static/media/title.432b1606.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane.3e607416.svg\";","import React, { Component } from 'react';\nimport './Filters.css';\n\n\n\nexport class Filters extends Component {\n\n    render() {\n        \n        return (\n            <div className=\"filters\">\n                <h2>Валюта</h2>\n                <ul className=\"lang\">\n                    {this.props.curMenu.map(curItem =>\n                        <li\n                            className={this.props.activeCurrency === curItem ? 'active' : null}\n                            onClick={this.props.changeCur}\n                        >{curItem}</li>\n                    )}\n                </ul>\n                <h3>Количество пересадок</h3>\n                <div className=\"filters-container\">\n                    {this.props.stops.map(stopItem =>\n                    <div className=\"transplants-filter\"  >\n                        <input type=\"checkbox\" \n                            id={stopItem.id} \n                            // className={this.props.stateStops.stop == 'all' && this.props.stateStops.active == true ? 'active' : ''} \n                            onClick={this.props.eventClick}\n                            \n                            />\n                            \n                        <label htmlFor={stopItem.id}>{stopItem.stop}</label>\n                    </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport title from './title.svg';\nimport plane from './plane.svg';\n// import data from './tickets.json';\nimport './Tickets.css';\n\n// const API = \"http://www.json-generator.com/api/json/get/cqGducpwHS?indent=2\";\n\nexport class Tickets extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tickets: [],\n        };\n        this.newList = [];\n        this.filterTickets = this.filterTickets.bind(this);\n    }\n\n    filterTickets(tickets) {\n        var updateList = tickets;\n\n        if (this.props.stops.stop == 'all' && this.props.stops.active) {\n            return updateList;\n        }\n        else {\n            updateList.map((list) => {\n                if (list.stops == this.props.stops.stop && this.props.stops.active) {\n                    updateList = updateList.filter((item) => {\n\n                        return item.stops == this.props.stops.stop && this.props.stops.active\n                    })\n\n                    this.newList.push(list);\n                }\n                else if (list.stops == this.props.stops.stop && !this.props.stops.active) {\n\n                    this.newList = this.newList.filter((item) => {\n                        return item.stops != list.stops\n                    })\n                }\n            })\n        }\n\n        return this.newList;\n    }\n\n    componentDidMount() {\n\n        fetch('tickets.json')\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ tickets: data.tickets });\n            })\n            .catch(error => console.log('error', error));\n\n    }\n\n    changeCur = (currency) => {\n        return currency === 'RUB' ? '₽' : currency === 'USD' ? <span>&#36;</span> : <span>&euro;</span>;\n    }\n\n    transformSum(price) {\n        var trPrice = price.toString();\n        if (trPrice.length > 3) {\n            for (let i = trPrice.length; trPrice >= 0  ; i--) {\n                if (i % 3 == 0) {\n                    var ar = trPrice.split('');\n                    ar.splice(trPrice.length - i, 0, ' ');\n                    trPrice = ar.join('');\n                }\n            }\n        }\n\n        return trPrice\n    }\n\n    calcCur = (currency, price) => {\n        switch (currency) {\n            case 'RUB': {\n                return this.transformSum(price)\n            }\n            case 'USD': {\n                return (price * 0.016).toFixed(1)\n            }\n            case 'EUR': {\n                return (price * 0.014).toFixed(1)\n            }\n            default: {\n                return price\n            }\n        }\n    }\n\n\n    render() {\n\n        const { tickets } = this.state;\n        this.updateList = this.filterTickets(tickets);\n\n        if (this.updateList.length !== 0) {\n            return (\n\n                <div className=\"tickets\">\n                    {this.updateList.map((ticket) => {\n                        const { departure_time, arrival_date, departure_date, origin, origin_name, arrival_time, destination, destination_name, price, stops } = ticket;\n\n                        return (\n                            <div className=\"ticket\">\n                                <div className=\"side-buy\">\n                                    <img src={title} alt=\"title\" />\n                                    <div className=\"btn-buy\">\n                                        <span className=\"price\">Купить</span> <br />\n                                        <span className=\"price\"> за {this.calcCur(this.props.currency, price)} {this.changeCur(this.props.currency)}</span>\n                                    </div>\n                                </div>\n                                <div className=\"transp-side\">\n                                    <div className=\"transp-from\">\n                                        <div className=\"time\">{departure_time}</div>\n                                        <div className=\"sity\">{origin},{origin_name}</div>\n                                        <div className=\"date\">{departure_date}</div>\n                                    </div>\n                                    <div className=\"amount-transp\">\n                                        <span> {stops === 0 ? 'без пересадок' : stops === 1 ? '1 пересадкa' : stops + ' пересадки'}</span>\n                                        <div className=\"underline\">\n                                            <img className=\"plane\" src={plane} alt=\"plane\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"transp-to\">\n                                        <div className=\"time\">{arrival_time}</div>\n                                        <div className=\"sity\">{destination_name},{destination}</div>\n                                        <div className=\"date\">{arrival_date}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                    )}\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"tickets\">\n                    <h1>Ничего не выбрано</h1>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Filters } from './components/Filters/Filters';\nimport { Tickets } from './components/Tickets/Tickets';\n\nconst curMenu = [\n  'RUB',\n  'USD',\n  'EUR'\n\n];\n\nconst stops = [\n  {\n    stop: 'Все',\n    id: 'all',\n    active: true\n  },\n  {\n    stop: 'Без пересадок',\n    id: '0',\n    active: false\n  },\n  {\n    stop: '1 пересадка',\n    id: '1',\n    active: false\n  },\n  {\n    stop: '2 пересадки',\n    id: '2',\n    active: false\n  },\n  {\n    stop: '3 пересадки',\n    id: '3',\n    active: false\n  }\n  \n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeCurrency: 'RUB',\n      stops: {\n        stop: 'all',\n        active: true\n      }\n    };\n  }\n\n   changeCur = (e) => {\n    this.setState({ activeCurrency: e.target.innerText })   \n  }\n\n  changeStops = (e) => {\n    this.setState(\n      { stops: {\n        stop: e.target.id,\n        active: e.target.checked\n      }\n      });\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"container\">\n          <Filters \n            curMenu = {curMenu} \n            stops = {stops}\n            stateStops = {this.state.stops}\n            activeCurrency={this.state.activeCurrency}\n            changeCur={this.changeCur}\n            eventClick={this.changeStops}\n          />\n          <Tickets \n            currency={this.state.activeCurrency}\n            stops={this.state.stops}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}