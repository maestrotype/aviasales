{"version":3,"sources":["logo.svg","components/Tickets/title.svg","components/Tickets/plane.svg","components/Filters/Filters.js","components/Tickets/Tickets.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Filters","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","className","props","curMenu","map","curItem","activeCurrency","onClick","changeCur","type","id","htmlFor","Component","Tickets","call","currency","console","log","state","tickets","_this2","fetch","then","response","json","data","setState","catch","error","_this3","_this$state","ticket","departure_time","arrival_date","departure_date","origin","origin_name","arrival_time","destination","destination_name","price","stops","src","title","alt","plane","App","updateCur","newCur","bind","assertThisInitialized","e","target","innerText","logo","Filters_Filters_Filters","Tickets_Tickets_Tickets","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3121dc69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c82fe072.svg\";","module.exports = __webpack_public_path__ + \"static/media/title.432b1606.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane.3e607416.svg\";","import React, { Component } from 'react';\nimport './Filters.css';\n\n\n\nexport class Filters extends Component {\n\n    render() {\n        return (\n            <div className=\"filters\">\n                <h2>Валюта</h2>\n                <ul className=\"lang\">\n                    {this.props.curMenu.map(curItem =>\n                        <li\n                            className={this.props.activeCurrency === curItem ? 'active' : null}\n                            onClick={this.props.changeCur}\n                        >{curItem}</li>\n                    )}\n                </ul>\n                <h3>Количество пересадок</h3>\n                <div className=\"filters-container\">\n                    <div className=\"transplants-filter\">\n                        <input type=\"checkbox\" id=\"all\" />\n                        <label htmlFor=\"all\">Все</label>\n                    </div>\n                    <div className=\"transplants-filter\">\n                        <input type=\"checkbox\" id=\"without-transplants\" />\n                        <label htmlFor=\"without-transplants\">Без пересадок</label>\n                    </div>\n                    <div className=\"transplants-filter\">\n                        <input type=\"checkbox\" id=\"transplants-1\" />\n                        <label htmlFor=\"transplants-1\">1 пересадка</label>\n                    </div>\n                    <div className=\"transplants-filter\">\n                        <input type=\"checkbox\" id=\"transplants-2\" />\n                        <label htmlFor=\"transplants-2\">2 пересадки</label>\n                    </div>\n                    <div className=\"transplants-filter\">\n                        <input type=\"checkbox\" id=\"transplants-3\" />\n                        <label htmlFor=\"transplants-3\">3 пересадки</label>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport title from './title.svg';\nimport plane from './plane.svg';\n// import data from './tickets.json';\nimport './Tickets.css';\n\n// const API = \"http://www.json-generator.com/api/json/get/cqGducpwHS?indent=2\";\n\nexport class Tickets extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            tickets: [],\n            currency: this.props.currency\n         };\n    }\n\n    componentDidMount() {\n        \n            // this.setState({ tickets: data.tickets });\n    \n        fetch('tickets.json')\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ tickets: data.tickets });\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    changeCur = (currency) => {\n        console.log('currency', currency);\n        return currency === 'RUB' ? '₽' : currency === 'USD' ? '&#36;' : '&#128;';\n    }\n\n\n    render() {\n\n        const { tickets, currency } = this.state;\n       \n        return (\n            <div className=\"tickets\">\n                {tickets.map((ticket) => {\n                    const { departure_time, arrival_date,departure_date,origin, origin_name, arrival_time,destination, destination_name, price, stops } = ticket;\n        \n                    return (\n                        <div className=\"ticket\">\n                            <div className=\"side-buy\">\n                                <img src={title} alt=\"title\" />\n                                <div className=\"btn-buy\">\n                                    <span className=\"price\">Купить за {price} {this.changeCur(currency)}</span>\n                                </div>\n                            </div>\n                            <div className=\"transp-side\">\n                                <div className=\"transp-from\">\n                                    <div className=\"time\">{departure_time}</div>\n                                    <div className=\"sity\">{origin},{origin_name}</div>\n                                    <div className=\"date\">{departure_date}</div>\n                                </div>\n                                <div className=\"amount-transp\">\n                                    <span>{stops} пересадк{stops === 1 ? 'a' : 'и' }</span>\n                                    <div className=\"underline\">\n                                        <img className=\"plane\" src={plane} alt=\"plane\"/>\n                                    </div>\n                                </div>\n                                <div className=\"transp-to\">\n                                    <div className=\"time\">{arrival_time}</div>\n                                    <div className=\"sity\">{destination_name},{destination}</div>\n                                    <div className=\"date\">{arrival_date}</div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n                )}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Filters } from './components/Filters/Filters';\nimport { Tickets } from './components/Tickets/Tickets';\n\nconst curMenu = [\n  'RUB',\n  'USD',\n  'EUR'\n\n];\n\nclass App extends Component {\n  newCur;\n  constructor(props) {\n    super(props);\n    this.changeCur = this.changeCur.bind(this);\n    this.state = {\n      activeCurrency: 'RUB'\n    };\n  }\n\n   async changeCur(e) {\n\n    this.setState({ activeCurrency: e.target.innerText }\n      , () => {\n        this.newCur = this.state.activeCurrency;\n      console.log(this.state.activeCurrency);\n    })\n    // this.setState({ activeCurrency: this.state.activeCurrency })\n    // });\n   \n  }\n  updateCur = () => {\n    return this.newCur;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"container\">\n          <Filters curMenu={curMenu} activeCurrency={this.state.activeCurrency}\n            changeCur={this.changeCur}\n          />\n          <Tickets currency={this.updateCur()}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}